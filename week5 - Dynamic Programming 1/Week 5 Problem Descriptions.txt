WEEK 5 PROBLEM DESCRIPTIONS

-------------------------------------------------
1) money_change_again

Apply dynamic programming for solving the Money Change Problem for denominations 1, 3, and 4

-------------------------------------------------
2) primitive_calculator

Given an integer ùëõ, compute the minimum number of operations needed to obtain the number ùëõ
starting from the number 1.

-------------------------------------------------
3) edit_distance

The goal of this problem is to implement the algorithm for computing the edit distance between two
strings.


-------------------------------------------------
4) longest_common_subsequence_of_two_sequences

Compute the length of a longest common subsequence of two sequences


-------------------------------------------------
5) longest_common_subsequence_of_three_sequences

Compute the length of a longest common subsequence of three sequences

-------------------------------------------------



